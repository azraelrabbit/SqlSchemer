//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from grammars/MySQLParser.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IMySQLParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class MySQLParserBaseListener : IMySQLParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStat([NotNull] MySQLParser.StatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStat([NotNull] MySQLParser.StatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.schema_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSchema_name([NotNull] MySQLParser.Schema_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.schema_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSchema_name([NotNull] MySQLParser.Schema_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.select_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_clause([NotNull] MySQLParser.Select_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.select_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_clause([NotNull] MySQLParser.Select_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.table_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_name([NotNull] MySQLParser.Table_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.table_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_name([NotNull] MySQLParser.Table_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.table_alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_alias([NotNull] MySQLParser.Table_aliasContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.table_alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_alias([NotNull] MySQLParser.Table_aliasContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.column_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_name([NotNull] MySQLParser.Column_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.column_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_name([NotNull] MySQLParser.Column_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.column_name_alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_name_alias([NotNull] MySQLParser.Column_name_aliasContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.column_name_alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_name_alias([NotNull] MySQLParser.Column_name_aliasContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.index_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndex_name([NotNull] MySQLParser.Index_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.index_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndex_name([NotNull] MySQLParser.Index_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.column_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_list([NotNull] MySQLParser.Column_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.column_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_list([NotNull] MySQLParser.Column_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.column_list_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_list_clause([NotNull] MySQLParser.Column_list_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.column_list_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_list_clause([NotNull] MySQLParser.Column_list_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.from_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFrom_clause([NotNull] MySQLParser.From_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.from_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFrom_clause([NotNull] MySQLParser.From_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.select_key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_key([NotNull] MySQLParser.Select_keyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.select_key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_key([NotNull] MySQLParser.Select_keyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.where_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhere_clause([NotNull] MySQLParser.Where_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.where_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhere_clause([NotNull] MySQLParser.Where_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] MySQLParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] MySQLParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElement([NotNull] MySQLParser.ElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElement([NotNull] MySQLParser.ElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.right_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRight_element([NotNull] MySQLParser.Right_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.right_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRight_element([NotNull] MySQLParser.Right_elementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.left_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeft_element([NotNull] MySQLParser.Left_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.left_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeft_element([NotNull] MySQLParser.Left_elementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.target_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTarget_element([NotNull] MySQLParser.Target_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.target_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTarget_element([NotNull] MySQLParser.Target_elementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.relational_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelational_op([NotNull] MySQLParser.Relational_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.relational_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelational_op([NotNull] MySQLParser.Relational_opContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.expr_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr_op([NotNull] MySQLParser.Expr_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.expr_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr_op([NotNull] MySQLParser.Expr_opContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.between_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBetween_op([NotNull] MySQLParser.Between_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.between_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBetween_op([NotNull] MySQLParser.Between_opContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.is_or_is_not"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIs_or_is_not([NotNull] MySQLParser.Is_or_is_notContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.is_or_is_not"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIs_or_is_not([NotNull] MySQLParser.Is_or_is_notContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.simple_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_expression([NotNull] MySQLParser.Simple_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.simple_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_expression([NotNull] MySQLParser.Simple_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.table_references"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_references([NotNull] MySQLParser.Table_referencesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.table_references"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_references([NotNull] MySQLParser.Table_referencesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.table_reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_reference([NotNull] MySQLParser.Table_referenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.table_reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_reference([NotNull] MySQLParser.Table_referenceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.table_factor1"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_factor1([NotNull] MySQLParser.Table_factor1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.table_factor1"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_factor1([NotNull] MySQLParser.Table_factor1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.table_factor2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_factor2([NotNull] MySQLParser.Table_factor2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.table_factor2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_factor2([NotNull] MySQLParser.Table_factor2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.table_factor3"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_factor3([NotNull] MySQLParser.Table_factor3Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.table_factor3"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_factor3([NotNull] MySQLParser.Table_factor3Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.table_factor4"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_factor4([NotNull] MySQLParser.Table_factor4Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.table_factor4"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_factor4([NotNull] MySQLParser.Table_factor4Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.table_atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_atom([NotNull] MySQLParser.Table_atomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.table_atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_atom([NotNull] MySQLParser.Table_atomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.join_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoin_clause([NotNull] MySQLParser.Join_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.join_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoin_clause([NotNull] MySQLParser.Join_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.join_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoin_condition([NotNull] MySQLParser.Join_conditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.join_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoin_condition([NotNull] MySQLParser.Join_conditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.index_hint_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndex_hint_list([NotNull] MySQLParser.Index_hint_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.index_hint_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndex_hint_list([NotNull] MySQLParser.Index_hint_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.index_options"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndex_options([NotNull] MySQLParser.Index_optionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.index_options"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndex_options([NotNull] MySQLParser.Index_optionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.index_hint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndex_hint([NotNull] MySQLParser.Index_hintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.index_hint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndex_hint([NotNull] MySQLParser.Index_hintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.index_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndex_list([NotNull] MySQLParser.Index_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.index_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndex_list([NotNull] MySQLParser.Index_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.partition_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPartition_clause([NotNull] MySQLParser.Partition_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.partition_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPartition_clause([NotNull] MySQLParser.Partition_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.partition_names"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPartition_names([NotNull] MySQLParser.Partition_namesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.partition_names"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPartition_names([NotNull] MySQLParser.Partition_namesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.partition_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPartition_name([NotNull] MySQLParser.Partition_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.partition_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPartition_name([NotNull] MySQLParser.Partition_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.subquery_alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubquery_alias([NotNull] MySQLParser.Subquery_aliasContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.subquery_alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubquery_alias([NotNull] MySQLParser.Subquery_aliasContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubquery([NotNull] MySQLParser.SubqueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubquery([NotNull] MySQLParser.SubqueryContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
